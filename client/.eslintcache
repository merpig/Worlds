[{"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/index.js":"1","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/reportWebVitals.js":"2","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/App.js":"3","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/pages/Login.js":"4","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/pages/Home.js":"5","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/pages/Signup.js":"6","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/pages/Profile.js":"7","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/components/Footer/index.js":"8","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/components/Header/index.js":"9","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/utils/mutations.js":"10","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/utils/auth.js":"11","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/utils/queries.js":"12","/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/components/WorldList/index.js":"13"},{"size":500,"mtime":1634308713182,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1634308713183,"results":"16","hashOfConfig":"15"},{"size":2003,"mtime":1634308713180,"results":"17","hashOfConfig":"15"},{"size":2475,"mtime":1634308713182,"results":"18","hashOfConfig":"15"},{"size":1099,"mtime":1634385018633,"results":"19","hashOfConfig":"15"},{"size":2632,"mtime":1634385018634,"results":"20","hashOfConfig":"15"},{"size":2217,"mtime":1634385018634,"results":"21","hashOfConfig":"15"},{"size":841,"mtime":1634308713180,"results":"22","hashOfConfig":"15"},{"size":1410,"mtime":1634385018633,"results":"23","hashOfConfig":"15"},{"size":891,"mtime":1634392856027,"results":"24","hashOfConfig":"15"},{"size":1043,"mtime":1634308713184,"results":"25","hashOfConfig":"15"},{"size":700,"mtime":1634391916872,"results":"26","hashOfConfig":"15"},{"size":3406,"mtime":1634395032069,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ax57kk",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/index.js",[],["56","57"],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/reportWebVitals.js",[],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/App.js",[],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/pages/Login.js",[],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/pages/Home.js",[],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/pages/Signup.js",[],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/pages/Profile.js",[],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/components/Footer/index.js",[],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/components/Header/index.js",[],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/utils/mutations.js",[],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/utils/auth.js",[],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/utils/queries.js",[],"/Users/sashapeters/Desktop/worldsProject/Worlds/client/src/components/WorldList/index.js",["58","59","60"],"import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../utils/auth';\nimport { useMutation } from '@apollo/client';\nimport { ADD_WORLD } from '../../utils/mutations';\n\nconst World = ({ _id, worldname, privacySetting, visitSetting, mainSection, players }) => {\n  const pSetting = privacySetting.charAt(0).toUpperCase()+privacySetting.slice(1)\n  return (\n    <div key={_id} className=\"card mb-3\">\n      <h4 className=\"card-header bg-dark text-light p-2 m-0\">\n        {/* <Link className=\"text-light\" to={`/world/${_id}`}> */}\n          {worldname}\n        {/* </Link> */}\n      </h4>\n        <div> {pSetting} can visit.</div>\n        <div> Players can visit when you're {visitSetting}.</div>\n        <div> There are currently {players.length} players in this world. </div>\n        <button>Enter World</button>\n    </div>\n  );\n};\n\nconst CreateWorld = ({showCreateWorld}) => {\n  const [addWorld, { error, data }] = useMutation(ADD_WORLD);\n  const [formState, setFormState] = useState({\n    worldname: '',\n    privacySetting: 'anyone',\n    visitSetting: 'offline',\n  });\n\n  const handleChange = (event) => {\n    let { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(Auth.getProfile().data._id);\n    if(formState.worldname.length){\n      try {\n        console.log({ ...formState, id: Auth.getProfile().data._id })\n        const { data } = await addWorld({\n          variables: { ...formState, id: Auth.getProfile().data._id }\n        });\n        console.log(data);\n      } catch (e) {\n        console.error(e);\n      }\n      setFormState({\n        worldname: '',\n        privacySetting: 'anyone',\n        visitSetting: 'offline',\n      });\n      showCreateWorld(false);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          className=\"form-input\"\n          placeholder=\"World name\"\n          name=\"worldname\"\n          type=\"text\"\n          value={formState.worldname}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"privacySetting\">Privacy Setting:</label>\n        <select name=\"privacySetting\" onChange={handleChange}>\n          <option value=\"anyone\">Anyone</option>\n          <option value=\"friends\">Friends</option>\n          <option value=\"none\">No one</option>\n        </select>\n        <label htmlFor=\"visitSetting\">Players can visit when you're: </label>\n        <select name=\"visitSetting\" onChange={handleChange}>\n          <option value=\"offline\">Offline</option>\n          <option value=\"online\">Online</option>\n          <option value=\"present\">In the world</option>\n        </select>\n        <br/>\n        <button type=\"submit\">Create</button>\n      </form>\n    </div>\n  )\n}\n\nconst WorldList = ({ worlds, title }) => {\n  //console.log(worlds)\n  const [createWorld,showCreateWorld] = useState(false);\n\n  const renderWorlds = () => {\n    if (!worlds.length) return <h4>No Worlds created yet</h4>;\n    return worlds.map(world => <World key={world._id} {...world} />);\n  }\n\n  return (\n    <>\n      <h3>{title}</h3>\n      <button onClick={()=>showCreateWorld(true)}>Create World</button>\n      {createWorld?<CreateWorld showCreateWorld={showCreateWorld} />:[]}\n      <hr></hr>\n      {renderWorlds()}\n    </>\n  );\n};\n\nexport default WorldList;\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":25,"column":22,"nodeType":"67","messageId":"68","endLine":25,"endColumn":27},{"ruleId":"65","severity":1,"message":"70","line":25,"column":29,"nodeType":"67","messageId":"68","endLine":25,"endColumn":33},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]